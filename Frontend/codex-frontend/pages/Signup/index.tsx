import React, { useState } from "react";
import Head from 'next/head'
import {
  Box,
  Button,
  FormControl,
  FormErrorMessage,
  FormLabel,
  Input,
  Select,
  Stack,
  Text,
  Image,
  Textarea,
  useToast,
} from "@chakra-ui/react";
import Styles from "@/styles/Signup.module.css"
import axios from "axios";
import Link from "next/link";
const initialState={
  fullname: "",
  email: "",
  username: "",
  password: "",
  country:"India"
}
const Signup = () => {
  const toast = useToast();
  const [input, setInput] = useState(initialState);

  const [isError, setError] = useState({
    fullname: false,
    email: false,
    username: false,
    password: false,
    country:false
  });
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setInput({ ...input, [name]: value });
  };
  const handleError = () => {
    setError({
      ...isError,
      fullname: input.fullname === "",
      email: input.email === "",
      username: input.username === "",
      password: input.password === "",
    });
    if (input.fullname !== "" && input.email !== "" && input.username !== ""&&input.password !== "") {
      CloseBox();
    }
  };

  const CloseBox = () => {
      Register();
  };
  const Register = async() => {
    try {
      let res = await axios.post("https://fancy-gray-lion.cyclic.app/register", input);

      toast({
        title: "Successfully Register",
        description: "Please Login ",
        status: "success",
        duration: 9000,
        isClosable: true,
      });
      setInput(initialState)
     } catch (err) {
      console.log(err);
  }
}

  return (
    <>
      <Head>
    <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="https://i.postimg.cc/jqWWx3m2/learningplate.png" />
    </Head>

    <main>
    <Box className={Styles.navbarimage}>
          <Link href="/">
          <Image
            src="https://i.postimg.cc/jqWWx3m2/learningplate.png"
            alt="learningplate"
          /></Link>
        </Box>
    <Box  className={Styles.bg}>
    <Box className={Styles.images}>
        <Image src='https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/6b5dc02a-210a-44c4-84d9-4c2c74d6e83d/d5t4wrc-bbc016c4-c336-4937-be0d-b8c1fba7336f.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzZiNWRjMDJhLTIxMGEtNDRjNC04NGQ5LTRjMmM3NGQ2ZTgzZFwvZDV0NHdyYy1iYmMwMTZjNC1jMzM2LTQ5MzctYmUwZC1iOGMxZmJhNzMzNmYuZ2lmIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.1lgz4NO3tl6gCad2TU5p7Q1T_Be-YXHenwuztdXlFeI' alt='login' />
      </Box>
      <Stack className={Styles.form} spacing={6} >

        <Text as="h1" style={{textAlign:"center",fontSize:"32px",fontWeight:600}}>Register</Text>
        <Box>
          <FormControl isRequired isInvalid={isError.fullname}>
            <Input
              value={input.fullname}
              placeholder="Full Name"
              onChange={handleInputChange}
              name="name"
            />
            {isError.fullname && (
              <FormErrorMessage color="red">Enter your full name</FormErrorMessage>
            )}
          </FormControl>
        </Box>
        <Box>
          <FormControl isRequired isInvalid={isError.email}>
            <Input
              type="email"
              name="email"
              onChange={handleInputChange}
              value={input.email}
              placeholder="Email"
            />
            {isError.email && (
              <FormErrorMessage color="red">Enter your email</FormErrorMessage>
            )}
          </FormControl>
        </Box>
        <Box>
          <FormControl isRequired isInvalid={isError.username}>
            <Input
              name="username"
              onChange={handleInputChange}
              value={input.username}
              placeholder="Username"
            />
            {isError.username && (
              <FormErrorMessage color="red">
                Username must be between 2 and 30 characters
              </FormErrorMessage>
            )}
          </FormControl>
        </Box>
        <Box display="flex" >
        {/* <Box display="flex" gap={10}> */}
          <FormControl isInvalid={isError.password} isRequired>
            <Input
              type="password"
              name="password"
              onChange={handleInputChange}
              value={input.password}
              placeholder="Password"
            />
            {isError.password && (
              <FormErrorMessage color="red">Enter Password</FormErrorMessage>
            )}
          </FormControl>
        </Box>
        <Box className={Styles.select}>
          <select name="country" onChange={handleInputChange} value={input.country}>
            <option value="India" selected>India</option>
            <option value="Albania">Albania</option>
            <option value="Andorra">Andorra</option>
          </select>
            </Box>
            <Box className={ Styles.btn} >
      <Button
        colorScheme="white"
        bg="rgb(0, 181, 181)"
        onClick={handleError}
      >
        Create account
            </Button>
            <Link href="/Login">
      <Button
        colorScheme="white"
        bg="rgb(0, 181, 181)"
      >
        Login
                </Button></Link>
                </Box>
      </Stack>
    </Box>
    </main>
    </>
  )
};

export default Signup;
